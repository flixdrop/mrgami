{"version":3,"sources":["./node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AAC/B;AAC3C;;AAEP;AACE;AACD;;AAEzC,8DAA8D;AAC9D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kGAAkG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,iCAAiC,EAAE,+FAA+F,CAAC,2DAAoB,MAAM,wBAAwB,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AAC9b,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB;AACnD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,iBAAiB,0DAAmB,EAAE,2CAA2C;AACjF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wDAAS,GAAG;AACvC,2BAA2B,4BAA4B;AACvD,oEAAoE,0DAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,+DAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG,GAAG,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+DAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,YAAY;AAC/I,2BAA2B,+DAAwB,EAAE,oEAAoE,mBAAmB,YAAY,iCAAiC,igBAAigB;AAC1rB,QAAQ,wDAAiB;AACzB,KAAK;AACL,QAAQ,wDAAiB;AACzB,KAAK,EAAE,2BAA2B,SAAS,oDAAW,EAAE,uDAAc,EAAE,uDAAc,EAAE,mEAA2B,uBAAuB,+DAAuB,EAAE,8DAAsB,EAAE,mEAA2B,EAAE,EAAE,sBAAsB,mBAAmB,EAAE,0CAA0C,WAAW,YAAY,kBAAkB,yBAAyB,kBAAkB,eAAe,6EAA6E,iBAAiB,qCAAqC,8BAA8B,WAAW,eAAe,aAAa,qCAAqC,8BAA8B,WAAW,eAAe,aAAa,IAAI;AACxsB;AACA,UAAU;AACV;AACA,oCAAoC,6CAA6C;AACjF,IAA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","file":"login-login-module-es2015.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\nclass Config {\r\n}\n\nclass NgOtpInputComponent {\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.otpForm.valueChanges.subscribe((v) => {\r\n            this.keysPipe.transform(this.otpForm.controls).forEach((k) => {\r\n                var val = this.otpForm.controls[k].value;\r\n                if (val && val.length > 1) {\r\n                    if (val.length >= this.config.length) {\r\n                        this.setValue(val);\r\n                    }\r\n                    else {\r\n                        this.rebuildValue();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        this.inputType = this.getInputType();\r\n    }\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (evt) => this.handlePaste(evt));\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    ifKeyCode(event, targetCode) {\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    onKeyDown($event) {\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    onKeyUp($event, inputIdx) {\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout(() => {\r\n                ele.setSelectionRange(0, 1);\r\n            }, 0);\r\n        }\r\n    }\r\n    ifValidEntry(event) {\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    focusTo(eleId) {\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        });\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    rebuildValue() {\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                let ctrlVal = this.otpForm.controls[k].value;\r\n                let isLengthExceed = ctrlVal.length > 1;\r\n                let isCaseTransformEnabled = !this.config.allowNumbersOnly && this.config.letterCase && (this.config.letterCase.toLocaleLowerCase() == 'upper' || this.config.letterCase.toLocaleLowerCase() == 'lower');\r\n                ctrlVal = ctrlVal[0];\r\n                let transformedVal = isCaseTransformEnabled ? this.config.letterCase.toLocaleLowerCase() == 'upper' ? ctrlVal.toUpperCase() : ctrlVal.toLowerCase() : ctrlVal;\r\n                if (isCaseTransformEnabled && transformedVal == ctrlVal) {\r\n                    isCaseTransformEnabled = false;\r\n                }\r\n                else {\r\n                    ctrlVal = transformedVal;\r\n                }\r\n                val += ctrlVal;\r\n                if (isLengthExceed || isCaseTransformEnabled) {\r\n                    this.otpForm.controls[k].setValue(ctrlVal);\r\n                }\r\n            }\r\n        });\r\n        this.onInputChange.emit(val);\r\n    }\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"autocomplete\", \"one-time-code\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"autocomplete\", \"one-time-code\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/**\r\n * @type {function(): !Array<(null|{\r\n *   type: ?,\r\n *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),\r\n * })>}\r\n * @nocollapse\r\n */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\n/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" \\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"one-time-code\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input{width:30px;font-size:18px;height:30px}}\\n\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\n\nclass NumberOnlyDirective {\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/**\r\n * @type {function(): !Array<(null|{\r\n *   type: ?,\r\n *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),\r\n * })>}\r\n * @nocollapse\r\n */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\n/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\n\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ng-otp-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgOtpInputComponent, NgOtpInputModule, KeysPipe as ɵa, NumberOnlyDirective as ɵb };\n\n//# sourceMappingURL=ng-otp-input.js.map","export default \"<!-- <ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button class=\\\"backbtn\\\" routerLink=\\\"/welcome\\\" routerDirection=\\\"back\\\">\\r\\n        <img src=\\\"../../assets/back.svg\\\" />\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <div class=\\\"ion-padding container\\\">\\r\\n    <h1>Login</h1>\\r\\n\\r\\n    <div class=\\\"form-container\\\">\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n        <ion-input></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n        <ion-input type=\\\"password\\\"></ion-input>\\r\\n        <ion-icon name=\\\"eye\\\" slot=\\\"end\\\"></ion-icon>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-button expand=\\\"block\\\" class=\\\"main-button\\\" (click)=\\\"login()\\\">Log in</ion-button>\\r\\n\\r\\n      <div class=\\\"sign-up\\\">\\r\\n        Don't have an account? <ion-button color=\\\"dark\\\" fill=\\\"clear\\\" routerLink=\\\"/signup\\\" routerDirection=\\\"forward\\\">Sign up</ion-button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content> -->\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"container\\\">\\r\\n<ion-card class=\\\"card-center\\\">\\r\\n  <ng-otp-input  (onInputChange)=\\\"onOtpChange($event)\\\"  [config]=\\\"{length:5}\\\"></ng-otp-input>\\r\\n<ion-item>\\r\\n<ion-button  color=\\\"primary\\\">Click Me</ion-button>\\r\\n</ion-item>\\r\\n</ion-card>\\r\\n<button class=\\\"btn btn-success\\\">\\r\\n  Click Me\\r\\n</button>\\r\\n\\r\\n</div> -->\\r\\n\\r\\n<!-- <div class=\\\"card\\\" style=\\\"width: 80%;margin: 200px 30px 30px 150px;\\\">\\r\\n<div class=\\\"card-center\\\" >\\r\\n  <div>\\r\\n    <h5  >Login</h5>\\r\\n    <p >Resend Otp?</p>\\r\\n    <ng-otp-input  (onInputChange)=\\\"onOtpChange($event)\\\"  [config]=\\\"{length:5}\\\"></ng-otp-input>\\r\\n    <ion-button  color=\\\"primary\\\">Click Me</ion-button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n</div> -->\\r\\n\\r\\n\\r\\n<ion-content >\\r\\n  <ion-card class=\\\"card-center\\\">\\r\\n\\r\\n\\r\\n    <ion-grid >\\r\\n      <ion-col>\\r\\n        <ion-row class=\\\"center\\\">\\r\\n        <ion-title>Login to Flixdrop App</ion-title>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"center\\\" *ngIf='!isNumberSubmitted'>\\r\\n        <ion-item>\\r\\n          <ion-input [(ngModel)]='name'  placeholder=\\\"Your Name\\\"></ion-input>\\r\\n        </ion-item>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"center\\\" *ngIf='!isNumberSubmitted'>\\r\\n        <ion-item>\\r\\n          <ion-input [(ngModel)]='inputNumber'  placeholder=\\\"Your Mobile Number\\\"></ion-input>\\r\\n        </ion-item>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"center\\\" *ngIf='!isNumberSubmitted'>\\r\\n        <ion-button (click)=onNumberSubmitted() color=\\\"medium\\\">\\r\\n          Get OTP\\r\\n              </ion-button>\\r\\n      </ion-row>\\r\\n<ion-row class=\\\"center\\\"  *ngIf='isNumberSubmitted'>\\r\\n\\r\\n  <ion-item style=\\\"color: rgb(201, 94, 6);\\\" >\\r\\n    <ng-otp-input  (onInputChange)=\\\"onOtpChange($event)\\\"  [config]=\\\"{length:6}\\\" ></ng-otp-input>\\r\\n  </ion-item>\\r\\n</ion-row>\\r\\n<ion-row class=\\\"center\\\"  *ngIf='isNumberSubmitted'>\\r\\n  <ion-button (click)=onLogin() color=\\\"medium\\\">\\r\\n    Login\\r\\n        </ion-button>\\r\\n</ion-row>\\r\\n      </ion-col>\\r\\n    </ion-grid>\\r\\n\\r\\n\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport { NgOtpInputComponent, NgOtpInputModule } from 'ng-otp-input';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    NgOtpInputModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","export default \".center {\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n  color: #f5600a;\\n  --ion-text-color: #ffffff;\\n}\\n\\n.card-center {\\n  margin-top: 200px;\\n}\\n\\nng-otp-input {\\n  color: #f5600a;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1EQTtFQUNJLHVCQUFBO0VBQ0YsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSx5QkFBQTtBQWxERjs7QUFvREU7RUFDRSxpQkFBQTtBQWpESjs7QUFvREU7RUFDRSxjQUFBO0FBakRKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLy8gVGhpcyB3aWxsIHJlbW92ZSBpT1MgSGVhZGVyIExpbmVcclxuLy8gaW9uLXRvb2xiYXIge1xyXG4vLyAgICAgLS1ib3JkZXItd2lkdGg6IDAgIWltcG9ydGFudDtcclxuLy8gfVxyXG5cclxuLy8gLy8gUmVtb3ZpbmcgQW5kcm9pZCBIZWFkZXIgTGluZVxyXG4vLyAuaGVhZGVyLW1kOjphZnRlciB7XHJcbi8vICAgICBiYWNrZ3JvdW5kOiBub25lICFpbXBvcnRhbnQ7XHJcbi8vIH1cclxuXHJcbi8vIC5jb250YWluZXIgaDEge1xyXG4vLyAgICAgbWFyZ2luLXRvcDogMDtcclxuLy8gfVxyXG5cclxuLy8gLmJhY2tidG4ge1xyXG4vLyAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbi8vIH1cclxuXHJcbi8vIC5mb3JtLWNvbnRhaW5lciB7XHJcbi8vICAgICBtYXJnaW4tdG9wOiA0OHB4O1xyXG4vLyB9XHJcblxyXG4vLyAuZm9ybS1jb250YWluZXIgaW9uLWl0ZW0ge1xyXG4vLyAgICAgLS1wYWRkaW5nLXN0YXJ0OiAwO1xyXG4vLyAgICAgLS1ib3JkZXItY29sb3I6ICNEQURBREE7XHJcbi8vIH1cclxuXHJcbi8vIC5mb3JtLWNvbnRhaW5lciBpb24taXRlbSBpb24tbGFiZWwge1xyXG4vLyAgICAgY29sb3I6ICNBNkE2QTY7XHJcbi8vIH1cclxuXHJcbi8vIC5mb3JtLWNvbnRhaW5lciBpb24taXRlbSBpb24taWNvbiB7XHJcbi8vICAgICBtYXJnaW4tdG9wOiBhdXRvO1xyXG4vLyAgICAgY29sb3I6ICNjNmNiZDQ7XHJcbi8vIH1cclxuXHJcbi8vIC5mb3JtLWNvbnRhaW5lciBpb24tYnV0dG9uIHtcclxuLy8gICAgIG1hcmdpbi10b3A6IDQ4cHg7XHJcbi8vIH1cclxuXHJcbi8vIC5zaWduLXVwIHtcclxuLy8gICAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vIH1cclxuXHJcbi8vIC5zaWduLXVwIGlvbi1idXR0b24ge1xyXG4vLyAgICAgbWFyZ2luOiAwO1xyXG4vLyB9XHJcblxyXG5cclxuLmNlbnRlcntcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGNvbG9yOiByZ2IoMjQ1LCA5NiwgMTApO1xyXG4gIC0taW9uLXRleHQtY29sb3I6ICNmZmZmZmY7XHJcbiAgfVxyXG4gIC5jYXJkLWNlbnRlcntcclxuICAgIG1hcmdpbi10b3A6IDIwMHB4O1xyXG4gIH1cclxuICBcclxuICBuZy1vdHAtaW5wdXR7XHJcbiAgICBjb2xvcjogcmdiKDI0NSwgOTYsIDEwKTtcclxuICB9Il19 */\";","// import { Component, OnInit } from '@angular/core';\r\n// import { NavController } from '@ionic/angular';\r\n// import { UtilService } from '../util.service';\r\n\r\n// @Component({\r\n//   selector: 'app-login',\r\n//   templateUrl: './login.page.html',\r\n//   styleUrls: ['./login.page.scss'],\r\n// })\r\n// export class LoginPage implements OnInit {\r\n\r\n//   constructor(\r\n//     private util: UtilService,\r\n//     private navCtrl: NavController, \r\n//   ) { }\r\n\r\n//   ngOnInit() {\r\n//   }\r\n\r\n//   login() {\r\n//     // Enabling Side Menu\r\n//     this.util.setMenuState(true);\r\n//     this.navCtrl.navigateRoot('landing', { animationDirection: 'forward' });\r\n//   }\r\n\r\n// }\r\n\r\n\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { LoginService } from '../services/login.service';\r\nimport { UtilService } from '../util.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage {\r\n  inputNumber;\r\n  isNumberSubmitted: boolean;\r\n  name;\r\n  otpreceived='889963';\r\n  otp: any;\r\n  constructor(private navCtrl: NavController, private router: Router,\r\n    private login: LoginService,\r\n    private util: UtilService,) {}\r\n  onOtpChange(otp){\r\n    this.otp = otp;\r\n    console.log(otp);\r\n  }\r\n  onLogin(){\r\n        //this.isNumberSubmitted =true;\r\n        this.login.validateOtp(this.name,this.inputNumber,this.otp)\r\n        .subscribe(response =>{\r\n          //this.isNumberSubmitted =true;\r\n          console.log('onLogin with OTP', response);\r\n        //this.router.navigate(['welcome']);\r\n        this.navCtrl.navigateRoot('landing', { animationDirection: 'forward' });\r\n        this.util.setMenuState(true);\r\n        console.log('Clicked');\r\n        },\r\n        error =>{\r\n          //this.isNumberSubmitted = false;\r\n          console.log('Error in onLogin()',error);\r\n        });\r\n  }\r\n\r\n  onNumberSubmitted(){\r\n    //this.isNumberSubmitted =true;\r\n    this.login.generateOtp(this.name,this.inputNumber)\r\n    .subscribe(response =>{\r\n      this.isNumberSubmitted =true;\r\n      console.log('NumberSubmitted', response);\r\n    },\r\n    error =>{\r\n      this.isNumberSubmitted = false;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}